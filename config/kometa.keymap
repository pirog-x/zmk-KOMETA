#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
};

/ {
    behaviors {
        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-while-undecided;
            hold-trigger-on-release;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
        };
    };

    macros {
        linux_bt_hotkeys: linux_bt_hotkeys {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 1>;
            label = "LINUX_BT_HOTKEYS";
        };

        mac_bt_hotkeys: mac_bt_hotkeys {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 0>;
            label = "MAC_BT_HOTKEYS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp RIGHT_BRACKET  &kp Q               &kp W           &kp E           &kp R             &kp T         &kp Y        &kp U              &kp I            &kp O            &kp P                        &kp LEFT_BRACKET
&kp GRAVE          &hr LEFT_CONTROL A  &hr LEFT_ALT S  &hr LEFT_GUI D  &hr LEFT_SHIFT F  &kp G         &kp H        &hr RIGHT_SHIFT J  &hr RIGHT_GUI K  &hr RIGHT_ALT L  &hr RIGHT_CONTROL SEMICOLON  &kp SINGLE_QUOTE
&kp BSLH           &kp Z               &kp X           &kp C           &kp V             &kp B         &kp N        &kp M              &kp COMMA        &kp DOT          &kp FSLH                     &kp MINUS
                                                       &lt 2 TAB       &lt 3 BACKSPACE   &lt 4 DELETE  &lt 4 ENTER  &lt 3 SPACE        &lt 2 ESC
            >;
        };

        linux_home_row_mods {
            bindings = <
&trans  &trans          &trans  &trans              &trans  &trans  &trans  &trans  &trans               &trans  &trans                       &trans
&trans  &hr LEFT_GUI A  &trans  &hr LEFT_CONTROL D  &trans  &trans  &trans  &trans  &hr RIGHT_CONTROL K  &trans  &hr RIGHT_CONTROL SEMICOLON  &trans
&trans  &trans          &trans  &trans              &trans  &trans  &trans  &trans  &trans               &trans  &trans                       &trans
                                &trans              &trans  &trans  &trans  &trans  &trans
            >;
        };

        num_layer {
            bindings = <
&none  &kp F12               &kp F7           &kp F8           &kp F9             &none         &kp PLUS     &kp N7                    &kp N8                  &kp N9                  &kp ASTERISK                &none
&none  &hr LEFT_CONTROL F10  &hr LEFT_ALT F4  &hr LEFT_GUI F5  &hr LEFT_SHIFT F6  &none         &kp MINUS    &hr RIGHT_SHIFT NUMBER_4  &hr RIGHT_GUI NUMBER_5  &hr RIGHT_ALT NUMBER_6  &hr RIGHT_CONTROL NUMBER_0  &kp EQUAL
&none  &kp F11               &kp F1           &kp F2           &kp F3             &none         &kp PERIOD   &kp NUMBER_1              &kp NUMBER_2            &kp NUMBER_3            &kp SLASH                   &none
                                              &trans           &trans             &lt 5 DELETE  &lt 5 ENTER  &trans                    &trans
            >;
        };

        mov_layer {
            bindings = <
&none  &none             &none         &none         &none           &kp CAPS              &none     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP    &kp C_BRI_UP
&none  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LA(SPACE)         &kp LEFT  &kp DOWN        &kp UP_ARROW      &kp RIGHT   &kp C_VOLUME_DOWN  &kp C_BRI_DN
&none  &kp LG(Z)         &kp LG(X)     &kp LG(C)     &kp LG(V)       &kp LS(LG(NUMBER_4))  &kp HOME  &kp PAGE_DOWN   &kp PG_UP         &kp END     &kp C_MUTE         &none
                                       &trans        &trans          &trans                &trans    &trans          &trans
            >;
        };

        symb_layer {
            bindings = <
&none  &none            &none        &none      &none       &none        &none      &none          &none         &none                 &none                  &none
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&none  &none            &none        &none      &none       &none        &none      &none          &none         &none                 &none                  &none
                                     &lt 5 TAB  &trans      &trans       &trans     &trans         &lt 5 ESCAPE
            >;
        };

        adjust_layer {
            bindings = <
&none           &none         &none         &none              &sys_reset       &out OUT_TOG  &soft_off  &ext_power EP_TOG  &out OUT_TOG  &bootloader  &sys_reset  &none
&bt BT_CLR_ALL  &bt BT_SEL 1  &bt BT_SEL 2  &linux_bt_hotkeys  &mac_bt_hotkeys  &none         &none      &none              &none         &none        &none       &none
&none           &none         &bt BT_CLR    &none              &none            &bootloader   &none      &none              &none         &none        &none       &none
                                            &trans             &none            &trans        &trans     &none              &trans
            >;
        };
    };
};
